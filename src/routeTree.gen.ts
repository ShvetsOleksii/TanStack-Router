/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ForauthorizedImport } from './routes/for_authorized'
import { Route as ForadminsImport } from './routes/for_admins'
import { Route as PostsIndexImport } from './routes/posts/index'
import { Route as TodoTodoIdImport } from './routes/todo/$todoId'
import { Route as PostsPostIdImport } from './routes/posts/$postId'

// Create Virtual Routes

const AuthLazyImport = createFileRoute('/auth')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const TodoIndexLazyImport = createFileRoute('/todo/')()

// Create/Update Routes

const AuthLazyRoute = AuthLazyImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const ForauthorizedRoute = ForauthorizedImport.update({
  path: '/for_authorized',
  getParentRoute: () => rootRoute,
} as any)

const ForadminsRoute = ForadminsImport.update({
  path: '/for_admins',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TodoIndexLazyRoute = TodoIndexLazyImport.update({
  path: '/todo/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/todo/index.lazy').then((d) => d.Route))

const PostsIndexRoute = PostsIndexImport.update({
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any)

const TodoTodoIdRoute = TodoTodoIdImport.update({
  path: '/todo/$todoId',
  getParentRoute: () => rootRoute,
} as any)

const PostsPostIdRoute = PostsPostIdImport.update({
  path: '/posts/$postId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/for_admins': {
      id: '/for_admins'
      path: '/for_admins'
      fullPath: '/for_admins'
      preLoaderRoute: typeof ForadminsImport
      parentRoute: typeof rootRoute
    }
    '/for_authorized': {
      id: '/for_authorized'
      path: '/for_authorized'
      fullPath: '/for_authorized'
      preLoaderRoute: typeof ForauthorizedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdImport
      parentRoute: typeof rootRoute
    }
    '/todo/$todoId': {
      id: '/todo/$todoId'
      path: '/todo/$todoId'
      fullPath: '/todo/$todoId'
      preLoaderRoute: typeof TodoTodoIdImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof rootRoute
    }
    '/todo/': {
      id: '/todo/'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  ForadminsRoute,
  ForauthorizedRoute,
  AboutLazyRoute,
  AuthLazyRoute,
  PostsPostIdRoute,
  TodoTodoIdRoute,
  PostsIndexRoute,
  TodoIndexLazyRoute,
})

/* prettier-ignore-end */
